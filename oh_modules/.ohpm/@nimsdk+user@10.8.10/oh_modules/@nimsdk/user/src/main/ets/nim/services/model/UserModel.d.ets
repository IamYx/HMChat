import { NIM, RdbStoreManager, V2NIMP2PMessageMuteMode, V2NIMUserSearchOption } from '@nimsdk/base'; import { V2NIMUserImpl } from './V2NIMUserImpl'; export interface RelationTag { accountId: string; isMute: boolean; isBlock: boolean; } export interface UserTag { account: string; mute?: number; black?: number; createTime?: number; updateTime?: number; } export declare class UserModel { private userCache; private infoTable; private tagTable; private core; constructor(k2: NIM, l2: RdbStoreManager);         loadAllUsers(): Promise<void>;           getUserById(accountId: string): Promise<V2NIMUserImpl | undefined>;           getUserList(z1: string[]): Promise<V2NIMUserImpl[]>;           upsert(v1: V2NIMUserImpl | V2NIMUserImpl[]): Promise<void>;           updateUserInfo(s1: V2NIMUserImpl): Promise<void>;           addToBlockList(account: string): Promise<void>;           removeFromBlockList(accountId: string): Promise<void>; searchUserByOption(option: V2NIMUserSearchOption): Promise<V2NIMUserImpl[]>; getBlockList(): Promise<string[]>; setAccountMuteMode(accountId: string, q1: V2NIMP2PMessageMuteMode): Promise<void>; getMuteList(): Promise<string[]>; } 