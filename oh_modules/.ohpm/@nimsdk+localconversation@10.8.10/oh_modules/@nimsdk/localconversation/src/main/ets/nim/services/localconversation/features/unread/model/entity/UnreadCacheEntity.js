export class UnreadCacheEntity { constructor(l18, m18, timestamp, mute) { this._conversationId = l18; this._unreadCount = m18; this._timestamp = timestamp; this._mute = !!mute; } get conversationId() { return this._conversationId; } get unreadCount() { return this._unreadCount; } get timestamp() { return this._timestamp; } get mute() { return this._mute; } equalsTo(k18) { if (this.conversationId === k18.conversationId && this.unreadCount === k18.unreadCount && this.timestamp === k18.timestamp && this.mute === k18.mute) { return true; } else { return false; } } } export class UnreadCacheSubUnreadCountEntity { constructor(i18, j18) { this._conversationId = i18; this._unreadCount = j18; } get conversationId() { return this._conversationId; } get unreadCount() { return this._unreadCount; } } export class UnreadCacheSubReadTimeEntity { constructor(h18, timestamp) { this._conversationId = h18; this._timestamp = timestamp; } get conversationId() { return this._conversationId; } get timestamp() { return this._timestamp; } } 