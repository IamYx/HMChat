import { RdbTableImpl } from '@nimsdk/base'; import { TABLE_LOCAL_CONVERSATION } from './types'; export class AbsLocalConversationTable extends RdbTableImpl { constructor(t) { super(t); this.tableName = TABLE_LOCAL_CONVERSATION.tableType.tableName; } async createTable() { try { this.createTableError = null; const i = { tableName: TABLE_LOCAL_CONVERSATION.tableType.tableName, indexName: 'local_conversation_id_index', columns: [ TABLE_LOCAL_CONVERSATION.COL_ENUM.CONVERSATION_ID ] }; const j = { tableName: TABLE_LOCAL_CONVERSATION.tableType.tableName, indexName: 'local_conversation_query_index', columns: [ TABLE_LOCAL_CONVERSATION.COL_ENUM.SORT_ORDER, TABLE_LOCAL_CONVERSATION.COL_ENUM.TYPE, TABLE_LOCAL_CONVERSATION.COL_ENUM.UNREAD_COUNT ] }; const m = { tableName: TABLE_LOCAL_CONVERSATION.tableType.tableName, indexName: 'local_conversation_status_index', columns: [ TABLE_LOCAL_CONVERSATION.COL_ENUM.STATUS ] }; const o = { tableName: TABLE_LOCAL_CONVERSATION.tableType.tableName, indexName: 'local_conversation_unread_index', columns: [ TABLE_LOCAL_CONVERSATION.COL_ENUM.UNREAD_COUNT ] }; await Promise.all([ await this.rdbStoreManager.createTable(TABLE_LOCAL_CONVERSATION.tableType.tableName, false, TABLE_LOCAL_CONVERSATION.columnsInfo), await this.rdbStoreManager.createTableUniqueIndex(i), await this.rdbStoreManager.createTableIndex(j), await this.rdbStoreManager.createTableIndex(m), await this.rdbStoreManager.createTableIndex(o) ]); } catch (e) { console.info(`create table data: abs ${JSON.stringify(e)}`); this.createTableError = e; } } } 