import { NIM, V2NIMLocalConversationOption } from '@nimsdk/base'; import { V2NIMLocalConversationImpl } from '../../../impl/V2NIMLocalConversationImpl'; import { LocalConversationAttributeUpdateInfo } from '../../../utils/types'; import { StickTopTimeEntity } from './entity/UnreadCacheEntity'; export declare class LocalConversationAttributeModel { private core; private db; private stickDb; constructor(m13: NIM);   query(limit: number, offset: number, option: V2NIMLocalConversationOption): Promise<V2NIMLocalConversationImpl[]>; queryById(j13: string): Promise<V2NIMLocalConversationImpl | undefined>; queryByIds(h13: string[]): Promise<V2NIMLocalConversationImpl[]>; insert(g13: V2NIMLocalConversationImpl): Promise<void>;             update(e13: LocalConversationAttributeUpdateInfo): Promise<void>;             delete(c13: string, d13?: boolean): Promise<void>;             deleteBatch(a13: string[], b13?: boolean): Promise<void>;       queryStickTopTimeById(z12: string): Promise<StickTopTimeEntity | undefined>; queryAllStickTopTimeIds(): Promise<string[]>; deleteStickTopTime(w12: string[]): Promise<void>; deleteStickTopTimeNotIn(v12: string[]): Promise<void>; upsertStickTopTime(u12: StickTopTimeEntity): Promise<void>; upsertBatchStickTopTime(entities: StickTopTimeEntity[]): Promise<void>; queryAllStickTopTime(): Promise<StickTopTimeEntity[]>; } 