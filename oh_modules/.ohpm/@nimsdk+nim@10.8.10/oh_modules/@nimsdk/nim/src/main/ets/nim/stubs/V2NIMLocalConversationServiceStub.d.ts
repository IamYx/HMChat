import { NIM, NIMServiceConfig, NIMServiceName, Packet, V2NIMClearHistoryNotification, V2NIMConversationType, V2NIMLocalConversation, V2NIMLocalConversationFilter, V2NIMLocalConversationListener, V2NIMLocalConversationOperationResult, V2NIMLocalConversationOption, V2NIMLocalConversationResult, V2NIMLocalConversationServiceInternal, V2NIMLocalConversationUpdate, V2NIMMessage, V2NIMMessageDeletedNotification, V2NIMMessageRevokeNotification, V2Service } from '@nimsdk/base';
export declare class V2NIMLocalConversationServiceStub extends V2Service<V2NIMLocalConversationListener> implements V2NIMLocalConversationServiceInternal {
    constructor(p125: NIM, q125: NIMServiceName, r125: NIMServiceConfig);
    onMessagesModify(o125: V2NIMMessage[]): Promise<void>;
    v2ISyncMultiMarkSessionAckHandler(m125: Packet, n125: boolean): Promise<void>;
    v2ISyncMultiMarkSuperTeamSessionAckHandler(k125: Packet, l125: boolean): Promise<void>;
    v2ISyncStickTopSessionsHandler(i125: Packet, j125: boolean): Promise<void>;
    getConversationReadTime(h125: string): Promise<number>;
    markConversationRead(g125: string): Promise<number>;
    onMessagesCleared(f125: V2NIMClearHistoryNotification[]): Promise<void>;
    onMessageReceived(e125: V2NIMMessage): Promise<void>;
    onMessageSent(d125: V2NIMMessage): Promise<void>;
    onMessageInserted(c125: V2NIMMessage): Promise<void>;
    onMessagesDeleted(b125: V2NIMMessageDeletedNotification[]): Promise<void>;
    onMessagesRevoked(a125: V2NIMMessageRevokeNotification[]): Promise<void>;
    onMessagesSynced(z124: V2NIMMessage[]): Promise<void>;
    onConversationSetMute(x124: string, y124: boolean): Promise<void>;
    onMessagesFetched(w124: V2NIMMessage[]): Promise<void>;
    getConversationList(u124: number, v124: number): Promise<V2NIMLocalConversationResult>;
    getConversationListByOption(r124: number, s124: number, t124: V2NIMLocalConversationOption): Promise<V2NIMLocalConversationResult>;
    getConversation(q124: string): Promise<V2NIMLocalConversation>;
    getConversationListByIds(p124: string[]): Promise<V2NIMLocalConversation[]>;
    createConversation(o124: string): Promise<V2NIMLocalConversation>;
    deleteConversation(m124: string, n124?: boolean | undefined): Promise<void>;
    deleteConversationListByIds(k124: string[], l124?: boolean | undefined): Promise<V2NIMLocalConversationOperationResult[]>;
    stickTopConversation(i124: string, j124: boolean): Promise<void>;
    updateConversation(g124: string, h124: V2NIMLocalConversationUpdate): Promise<void>;
    updateConversationLocalExtension(e124: string, f124: string): Promise<void>;
    getTotalUnreadCount(): number;
    getUnreadCountByIds(d124: string[]): Promise<number>;
    getUnreadCountByFilter(c124: V2NIMLocalConversationFilter): Promise<number>;
    clearTotalUnreadCount(): Promise<void>;
    clearUnreadCountByIds(b124: string[]): Promise<V2NIMLocalConversationOperationResult[]>;
    clearUnreadCountByTypes(a124: V2NIMConversationType[]): Promise<void>;
    subscribeUnreadCountByFilter(z123: V2NIMLocalConversationFilter): void;
    unsubscribeUnreadCountByFilter(y123: V2NIMLocalConversationFilter): void;
    onLoginStart(x123: string): Promise<void>;
    onLoginFinished(w123: string): Promise<void>;
    onLogout(): void;
    v2IGetConversationList(u123: number, v123: number): Promise<V2NIMLocalConversationResult>;
    v2IGetConversationListByOption(r123: number, s123: number, t123: V2NIMLocalConversationOption): Promise<V2NIMLocalConversationResult>;
    v2IGetConversation(q123: string): Promise<V2NIMLocalConversation>;
    v2IGetConversationListByIds(p123: string[]): Promise<V2NIMLocalConversation[]>;
    v2ICreateConversation(o123: string): Promise<V2NIMLocalConversation>;
    v2IDeleteConversation(m123: string, n123?: boolean | undefined): Promise<void>;
    v2IDeleteConversationListByIds(k123: string[], l123?: boolean | undefined): Promise<V2NIMLocalConversationOperationResult[]>;
    v2IStickTopConversation(i123: string, j123: boolean): Promise<void>;
    v2IUpdateConversation(g123: string, h123: V2NIMLocalConversationUpdate): Promise<void>;
    v2IUpdateConversationLocalExtension(e123: string, f123: string): Promise<void>;
    v2IGetTotalUnreadCount(): number;
    v2IGetUnreadCountByIds(d123: string[]): Promise<number>;
    v2IGetUnreadCountByFilter(c123: V2NIMLocalConversationFilter): Promise<number>;
    v2IClearTotalUnreadCount(): Promise<void>;
    v2IClearUnreadCountByIds(b123: string[]): Promise<V2NIMLocalConversationOperationResult[]>;
    v2IClearUnreadCountByGroupId(a123: string): Promise<void>;
    v2IClearUnreadCountByTypes(z122: V2NIMConversationType[]): Promise<void>;
    v2ISubscribeUnreadCountByFilter(y122: V2NIMLocalConversationFilter): void;
    v2IUnsubscribeUnreadCountByFilter(x122: V2NIMLocalConversationFilter): void;
    v2IMarkConversationRead(w122: string): Promise<number>;
    v2IGetConversationReadTime(v122: string): Promise<number>;
}
