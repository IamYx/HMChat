import { V2NIMTeamType, V2NIMCreateTeamParams, V2NIMUpdateTeamInfoParams, V2NIMTeamJoinActionInfo, V2NIMTeamMemberRole, V2NIMUpdateSelfMemberInfoParams, V2NIMTeamChatBannedMode, V2NIMTeamMemberQueryOption, V2NIMTeamJoinActionInfoQueryOption, V2NIMTeamListener, V2NIMTeam, V2NIMTeamMemberListResult, V2NIMTeamMember, V2NIMTeamJoinActionInfoResult, V2NIMCreateTeamResult, V2NIMTeamMemberSearchOption, V2NIMTeamMemberSearchResult, V2Service, V2NIMTeamServiceInternal, NIMServiceConfig, NIMServiceName, NIM, NIMEStrAnyObj, V2NIMAntispamConfig, V2NIMMessage, Packet, V2NIMTeamMessageMuteMode, V2NIMTeamInviteParams } from '@nimsdk/base';
import { HashMap } from '@kit.ArkTS';
export declare class V2NIMTeamServiceStub extends V2Service<V2NIMTeamListener> implements V2NIMTeamServiceInternal {
    constructor(b136: NIM, c136: NIMServiceName, d136: NIMServiceConfig);
    v2IUpdateTeamMemberBits(x135: string, y135: V2NIMTeamType, z135: string, a136: V2NIMTeamMessageMuteMode): Promise<void>;
    v2IGetTeamMessageMuteMode(v135: string, w135: V2NIMTeamType): Promise<V2NIMTeamMessageMuteMode>;
    v2IGetTeamMessageMuteModeBatch(t135: string[], u135: V2NIMTeamType): Promise<HashMap<string, V2NIMTeamMessageMuteMode>>;
    v2ISyncTeamSyncHandler(s135: Packet): Promise<void>;
    v2ISyncSuperTeamSyncHandler(r135: Packet): Promise<void>;
    v2ISyncTeamMembersOfSelfInSyncHandler(q135: Packet): Promise<void>;
    v2ISyncSuperTeamMembersOfSelfInSyncHandler(p135: Packet): Promise<void>;
    clearAllTeamJoinActionInfo(): Promise<void>;
    deleteTeamJoinActionInfo(o135: V2NIMTeamJoinActionInfo): Promise<void>;
    inviteMemberEx(l135: string, m135: V2NIMTeamType, n135: V2NIMTeamInviteParams): Promise<string[]>;
    v2InviteMemberEx(i135: string, j135: V2NIMTeamType, k135: V2NIMTeamInviteParams): Promise<string[]>;
    v2ITeamProcessSysNotification(h135: NIMEStrAnyObj): Promise<void>;
    v2ITeamQueryMemberUpdateTimeMap(g135: V2NIMTeamType): Promise<HashMap<string, number>>;
    searchTeamMembers(f135: V2NIMTeamMemberSearchOption): Promise<V2NIMTeamMemberSearchResult>;
    searchTeamByKeyword(e135: string): Promise<V2NIMTeam[]>;
    v2IGetLocalTeamById(c135: string, d135: V2NIMTeamType): Promise<V2NIMTeam>;
    v2IGetLocalTeamByIds(a135: string[], b135: V2NIMTeamType): Promise<HashMap<string, V2NIMTeam | undefined>>;
    v2IGetLocalTeamMemberById(x134: string, y134: V2NIMTeamType, z134: string): Promise<V2NIMTeamMember | undefined>;
    v2IQueryLocalAllTeams(): Promise<V2NIMTeam[]>;
    v2IQueryLocalAllSuperTeams(): Promise<V2NIMTeam[]>;
    teamProcessNotification(w134: V2NIMMessage): Promise<void>;
    createTeam(s134: V2NIMCreateTeamParams, t134?: string[], u134?: string, v134?: V2NIMAntispamConfig): Promise<V2NIMCreateTeamResult>;
    updateTeamInfo(o134: string, p134: V2NIMTeamType, q134: V2NIMUpdateTeamInfoParams, r134?: V2NIMAntispamConfig): Promise<void>;
    leaveTeam(m134: string, n134: V2NIMTeamType): Promise<void>;
    getTeamInfo(k134: string, l134: V2NIMTeamType): Promise<V2NIMTeam>;
    getJoinedTeamList(j134?: V2NIMTeamType[]): Promise<V2NIMTeam[]>;
    getJoinedTeamCount(i134?: V2NIMTeamType[]): Promise<number>;
    getTeamInfoByIds(g134: string[], h134: V2NIMTeamType): Promise<V2NIMTeam[]>;
    dismissTeam(e134: string, f134: V2NIMTeamType): Promise<void>;
    inviteMember(a134: string, b134: V2NIMTeamType, c134: string[], d134?: string): Promise<string[]>;
    acceptInvitation(z133: V2NIMTeamJoinActionInfo): Promise<V2NIMTeam>;
    rejectInvitation(x133: V2NIMTeamJoinActionInfo, y133?: string): Promise<void>;
    kickMember(u133: string, v133: V2NIMTeamType, w133: string[]): Promise<void>;
    applyJoinTeam(r133: string, s133: V2NIMTeamType, t133?: string): Promise<V2NIMTeam>;
    acceptJoinApplication(q133: V2NIMTeamJoinActionInfo): Promise<void>;
    rejectJoinApplication(o133: V2NIMTeamJoinActionInfo, p133?: string): Promise<void>;
    updateTeamMemberRole(k133: string, l133: V2NIMTeamType, m133: string[], n133: V2NIMTeamMemberRole): Promise<void>;
    transferTeamOwner(g133: string, h133: V2NIMTeamType, i133: string, j133?: boolean): Promise<void>;
    updateSelfTeamMemberInfo(d133: string, e133: V2NIMTeamType, f133: V2NIMUpdateSelfMemberInfoParams): Promise<void>;
    updateTeamMemberNick(z132: string, a133: V2NIMTeamType, b133: string, c133: string): Promise<void>;
    setTeamChatBannedMode(w132: string, x132: V2NIMTeamType, y132: V2NIMTeamChatBannedMode): Promise<void>;
    setTeamMemberChatBannedStatus(s132: string, t132: V2NIMTeamType, u132: string, v132: boolean): Promise<void>;
    getTeamMemberList(p132: string, q132: V2NIMTeamType, r132: V2NIMTeamMemberQueryOption): Promise<V2NIMTeamMemberListResult>;
    getTeamMemberListByIds(m132: string, n132: V2NIMTeamType, o132: string[]): Promise<V2NIMTeamMember[]>;
    getTeamMemberInvitor(j132: string, k132: V2NIMTeamType, l132: string[]): Promise<{
        [accountId: string]: string;
    }>;
    getTeamJoinActionInfoList(i132: V2NIMTeamJoinActionInfoQueryOption): Promise<V2NIMTeamJoinActionInfoResult>;
    onLoginStart(h132: string): Promise<void>;
    onLoginFinished(g132: string): Promise<void>;
    onLogout(): void;
}
