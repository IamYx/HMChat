import { PinTable } from '../../model/table/PinTable'; const s41 = '[PinModel]'; export class PinModel { constructor(z61, a62) { this.core = z61; this.kvManager = z61.kvManager; this.pinTable = new PinTable(a62, z61); } async insert(w61) { await this.pinTable.insert(w61); let x61 = w61.messageRefer.conversationId + '_pin'; const y61 = await this.kvManager.getKVStore(this.core.account); this.core.logger.info(s41 + `insert ${x61}: ${w61.updateTime}`); await y61.put(x61, w61.updateTime); } async insertList(t61) { await this.pinTable.insert(t61); const first = t61[0]; const u61 = first.messageRefer.conversationId + '_pin'; const v61 = await this.kvManager.getKVStore(this.core.account); this.core.logger.info(s41 + `insertList ${u61}: ${first.updateTime}`); await v61.put(u61, first.updateTime); } async update(q61) { await this.pinTable.update(q61); const r61 = q61.messageRefer.conversationId + '_pin'; const s61 = await this.kvManager.getKVStore(this.core.account); this.core.logger.info(s41 + `update ${r61}: ${q61.updateTime}`); await s61.put(r61, q61.updateTime); } async delete(n61) { await this.pinTable.delete(n61); const o61 = n61.messageRefer.conversationId + '_pin'; const p61 = await this.kvManager.getKVStore(this.core.account); this.core.logger.info(s41 + `delete ${o61}: ${n61.updateTime}`); await p61.put(o61, n61.updateTime); } async queryByClientId(m61, clientId) { return await this.pinTable.queryByClientId(m61, clientId); } async queryByConversationId(l61) { return await this.pinTable.queryByConversationId(l61); } async getSyncTimestamp(i61) { try { const j61 = i61 + '_pin'; const k61 = await this.kvManager.getKVStore(this.core.account); const timestamp = await k61.get(j61); console.info(`pin get sync time: ${j61}: ${timestamp}`); return timestamp; } catch (e) { this.core.logger.warn(s41, `getSyncTimestamp err`, e); return 0; } } async deleteByConversationId(h61) { this.pinTable.deleteByConversationId(h61); } async query(g61) { return await this.pinTable.queryByConversationId(g61); } } 