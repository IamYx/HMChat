import { get } from '@nimsdk/vendor/'; import { AddQuickCommentRequest, GetQuickCommentRequest, QuickCommentParams, RemoveQuickCommentRequest } from '../../cloud/MessageRequest'; import { getConversationId } from '../../utils/Tools'; export class CommentCloud { constructor(e51) { this.core = e51; } async addQuickComment(message, index, z50, a51) { const b51 = new QuickCommentParams(index, z50, a51); const c51 = new AddQuickCommentRequest(message, b51); const d51 = (await this.core.sendCmd('v2AddQuickComment', c51)); return get(d51.content, 'timetag'); } async removeQuickComment(u50, index, v50) { const w50 = new QuickCommentParams(index, v50); const x50 = new RemoveQuickCommentRequest(u50, w50); const y50 = (await this.core.sendCmd('v2RemoveQuickComment', x50)); return get(y50.content, 'timetag'); } async getQuickCommentList(p50) { const q50 = []; const r50 = await this.core.sendCmd('v2GetQuickComment', new GetQuickCommentRequest(p50)); get(r50.content, 'data').forEach((data) => { const s50 = {}; s50.details = []; s50.messageRefer = data.messageRefer; s50.modified = data.modified; s50.createTime = data.timestamp; if (data.detail) { const t50 = JSON.parse(data.detail); t50.forEach((detail) => { data.messageRefer.conversationId = getConversationId(data.messageRefer.conversationType, this.core.account, data.messageRefer.senderId, data.messageRefer.receiverId); s50.details.push({ messageRefer: data.messageRefer, operatorId: detail[1], index: parseInt(detail[2]), createTime: parseInt(detail[3]), serverExtension: detail[4] }); }); } q50.push(s50); }); return q50; } } 