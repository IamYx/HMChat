import { QuickCommentTable } from '../../model/table/QuickCommentTable'; export class QuickCommentMessage { constructor(l51, timestamp) { this.messageRefer = l51; this.timestamp = timestamp; } } const s41 = '[CommentModel]'; export class CommentModel { constructor(j51, k51) { this.core = j51; this.rdbStoreManager = k51; this.table = new QuickCommentTable(this.rdbStoreManager, j51); } async addComment(comment) { this.core.logger.info(s41, 'addComment', comment); await this.table.addComment(comment); return; } async removeComment(comment) { this.core.logger.info(s41, 'removeComment', comment); await this.table.removeComment(comment); return; } async removeAllComment(i51) { this.core.logger.info(s41, 'removeAllComment', i51); await this.table.removeAllComment(i51); } async queryAllComment(g51) { this.core.logger.info(s41, 'queryAllComment', g51); const h51 = await this.table.queryComment(g51); return h51; } async getTimestamp(f51) { this.core.logger.info(s41, 'getTimestamp', f51); const timestamp = await this.table.getTimestamp(f51); this.core.logger.info(s41, 'getTimestamp', timestamp); return timestamp; } } 