import { NIM, NIMEStrAnyObj, Packet, V2NIMClearHistoryNotification, V2NIMConversationType, V2NIMMessage, V2NIMMessageAttachment, V2NIMMessageAudioAttachment, V2NIMMessageCallAttachment, V2NIMMessageCustomAttachmentParser, V2NIMMessageImageAttachment, V2NIMMessageLocationAttachment, V2NIMMessageNotificationAttachment, V2NIMMessageQuickCommentNotification, V2NIMMessageQuickCommentType, V2NIMMessageRefer, V2NIMMessageRevokeNotification, V2NIMMessageRevokeParams, V2NIMMessageSendingState, V2NIMMessageType, V2NIMModifyMessageParams, V2NIMSystemMessageType, V2NIMTeam, V2NIMMessageAIConfig, V2NIMMessageAIConfigParams } from '@nimsdk/base';       export declare function completeMessage(a75: NIM, message: V2NIMMessage): V2NIMMessage; export declare function completeMessageRefer(y74: NIM, z74: V2NIMMessageRefer): V2NIMMessageRefer; export declare function formatMessageRefer(u74: NIM, message: V2NIMMessage | V2NIMMessageRefer): V2NIMMessageRefer; export declare function formatRevokeNotification(r74: NIM, message: V2NIMMessage, params?: V2NIMMessageRevokeParams): V2NIMMessageRevokeNotification[]; export declare function formatSendRevokeMessage(o74: NIM, message: V2NIMMessage, params?: V2NIMMessageRevokeParams): { attach: string; sysMsgType: V2NIMSystemMessageType; opeAccount: string; postscript?: string; serverExtension?: string; pushContent?: string; pushPayload?: string; env?: string; messageClientId: string; messageServerId: string; createTime: number; senderId: string; receiverId: string; conversationType: V2NIMConversationType; conversationId: string; isSelf: boolean; attachmentUploadState?: import("@nimsdk/base").V2NIMMessageAttachmentUploadState; sendingState: V2NIMMessageSendingState; messageType: V2NIMMessageType; subType?: number; text?: string; attachment?: V2NIMMessageAttachment | Partial<import("@nimsdk/base").V2NIMMessageFileAttachment> | Partial<V2NIMMessageImageAttachment> | Partial<V2NIMMessageAudioAttachment> | Partial<import("@nimsdk/base").V2NIMMessageVideoAttachment> | Partial<V2NIMMessageLocationAttachment> | Partial<V2NIMMessageNotificationAttachment> | Partial<V2NIMMessageCallAttachment>; localExtension?: string; callbackExtension?: string; modifyTime?: number; modifyAccountId?: string; messageConfig?: import("@nimsdk/base").V2NIMMessageConfig; pushConfig?: import("@nimsdk/base").V2NIMMessagePushConfig; routeConfig?: import("@nimsdk/base").V2NIMMessageRouteConfig; antispamConfig?: import("@nimsdk/base").V2NIMMessageAntispamConfig; robotConfig?: import("@nimsdk/base").V2NIMMessageRobotConfig; threadRoot?: V2NIMMessageRefer; threadReply?: V2NIMMessageRefer; messageStatus: import("@nimsdk/base").V2NIMMessageStatus; aiConfig?: V2NIMMessageAIConfig; }; export declare function formatRevokeMessage(j74: NIM, data: NIMEStrAnyObj): V2NIMMessageRevokeNotification; export declare function formatClientHistoryNotifications(g74: NIM, h74: Packet): V2NIMClearHistoryNotification[]; export declare function formatClearHistoryNotification(e74: NIM, data: { deleteTime: number; serverExtension?: string; conversationType: V2NIMConversationType; receiverId: string; teamId: string; }): V2NIMClearHistoryNotification;             export declare function formatNotificationMessage(x73: NIM, message: V2NIMMessage): V2NIMMessage; export declare function formatTeamFromTinfo(p73: NIMEStrAnyObj): V2NIMTeam;       export declare function formatReceiveMessageAttachment(message: V2NIMMessage): V2NIMMessage; export declare function formatCustomMessage(message: V2NIMMessage, g73: V2NIMMessageCustomAttachmentParser[]): V2NIMMessage; export declare function onQuickCommentNotificationHandler(d73: NIM, e73: Packet, type: V2NIMMessageQuickCommentType): V2NIMMessageQuickCommentNotification; export declare function messageConversationId(y72: NIM, z72: V2NIMConversationType, a73: string, b73: string): string; export declare function mediaAttachmentToRaw(r72: V2NIMMessageAttachment): string; export declare function locationAttachmentToRaw(q72: V2NIMMessageAttachment): string; export declare function callAttachmentToRaw(n72: V2NIMMessageAttachment): string; export declare function generateModifyMessage(message: V2NIMMessage, params: V2NIMModifyMessageParams): Partial<V2NIMMessage>; export declare function formatModifyMessage(message: V2NIMMessage, result: Packet): any; export declare function prepareModifyMessage(message: V2NIMMessage, params: V2NIMModifyMessageParams): V2NIMMessage & { clientAntispamHit?: boolean; }; export declare function formatAIMessageConfig(message: V2NIMMessage, g72?: V2NIMMessageAIConfigParams): V2NIMMessageAIConfigParams & V2NIMMessageAIConfig; 