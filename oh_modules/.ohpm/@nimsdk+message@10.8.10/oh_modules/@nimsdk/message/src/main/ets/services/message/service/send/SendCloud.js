import { V2NIMConversationType, ValidateErrorV2 } from '@nimsdk/base'; import { get } from '@nimsdk/vendor/'; import { SendMessageRequest } from '../../cloud/MessageRequest'; export class SendCloud { constructor(t66) { this.core = t66; } async sendMessage(message) { let cmd = ''; if (message.conversationType === V2NIMConversationType.V2NIM_CONVERSATION_TYPE_P2P) { cmd = 'v2SendP2pMessage'; } else if (message.conversationType === V2NIMConversationType.V2NIM_CONVERSATION_TYPE_TEAM) { cmd = 'v2SendTeamMessage'; } else if (message.conversationType === V2NIMConversationType.V2NIM_CONVERSATION_TYPE_SUPER_TEAM) { cmd = 'v2SendSuperTeamMessage'; } else { throw new ValidateErrorV2({ detail: { reason: `conversationType: ${message.conversationType} is not supported` } }); } const sendMessage = new SendMessageRequest(message); const s66 = await this.core.sendCmd(cmd, sendMessage); const result = get(s66.content, 'data'); message.messageServerId = result.messageServerId; message.createTime = result.createTime; message.callbackExtension = result.callbackExtension; message.antispamResult = result.antispamResult; message.msgAckSnapshot = result.msgAckSnapshot; return message; } } 