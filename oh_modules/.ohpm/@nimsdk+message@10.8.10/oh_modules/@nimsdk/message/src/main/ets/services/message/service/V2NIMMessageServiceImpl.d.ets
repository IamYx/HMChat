import { NIM, NIMEStrAnyObj, NIMServiceName, Packet, V2NIMAddCollectionParams, V2NIMClearHistoryMessageOption, V2NIMCollection, V2NIMCollectionOption, V2NIMMessage, V2NIMMessageListener, V2NIMMessageListOption, V2NIMMessagePin, V2NIMMessageQuickCommentPushConfig, V2NIMMessageRefer, V2NIMMessageRevokeNotification, V2NIMMessageRevokeParams, V2NIMMessageSearchParams, V2NIMMessageServiceInternal, V2NIMP2PMessageReadReceipt, V2NIMSendMessageParams, V2NIMSendMessageResult, V2NIMTeamMessageReadReceipt, V2NIMTeamMessageReadReceiptDetail, V2NIMThreadMessageListOption, V2NIMThreadMessageListResult, V2NIMVoiceToTextParams, V2Service, V2NIMModifyMessageParams, V2NIMModifyMessageResult, V2NIMMessageFilter, NIMMessageServiceConfig, V2NIMMessageCustomAttachmentParser, V2NIMMessageSearchResult, V2NIMMessageSearchExParams } from '@nimsdk/base'; import s76 from '@ohos.data.relationalStore'; export default class V2NIMMessageServiceImpl extends V2Service<V2NIMMessageListener> implements V2NIMMessageServiceInternal { private lastMessageTimers; customAttachmentParsers: V2NIMMessageCustomAttachmentParser[]; constructor(h71: NIM, serviceName: NIMServiceName, config: NIMMessageServiceConfig); private _model?; private get model(); private _pinService?; private get pinService(); private _commentService?; private get commentService(); private _receiptService?; private get receiptService(); private _sendService?; private get sendService(); private _receiveService?; private get receiveService(); private _persistService?; private get persistService(); private _deleteService?; private get deleteService(); private _revokeService?; private get revokeService(); private _collectService?; private get collectService(); private _translateService?; private get translateService(); private _getService?; private get getService(); private _modifyService?; private get modifyService();       private _messageFilter?;         get messageFilter(): V2NIMMessageFilter | undefined; messageFilterShouldIgnore(message: V2NIMMessage): Promise<boolean>;           v2ICreateMessageByResultValue(valuesBucket: s76.ValuesBucket): V2NIMMessage | undefined; v2IGetLastMessageOfConversation(a71: string): Promise<V2NIMMessage | undefined>;             v2IGetLastMessageOfLocalConversation(x70: string, y70?: boolean): Promise<V2NIMMessage | undefined>; v2IGetLastMessageFast(v70: string, w70?: boolean): Promise<V2NIMMessage | undefined>; v2IDeleteLocalMessageByConversation(u70: string): Promise<void>; onLoginStart(accountId: string): Promise<void>; onLoginFinished(accountId: string): Promise<void>; onLogout(): void; sendMessage(message: V2NIMMessage, q70: string, params?: V2NIMSendMessageParams, progress?: (percentage: number) => void): Promise<V2NIMSendMessageResult>; replyMessage(message: V2NIMMessage, p70: V2NIMMessage, params?: V2NIMSendMessageParams, progress?: (percentage: number) => void): Promise<V2NIMSendMessageResult>; revokeMessage(message: V2NIMMessage, params?: V2NIMMessageRevokeParams): Promise<void>; modifyMessage(message: V2NIMMessage, params: V2NIMModifyMessageParams): Promise<V2NIMModifyMessageResult>; getMessageList(option: V2NIMMessageListOption): Promise<V2NIMMessage[]>; getMessageListByRefers(o70: V2NIMMessageRefer[]): Promise<V2NIMMessage[]>; getMessageListByIds(n70: string[]): Promise<V2NIMMessage[]>; searchCloudMessages(params: V2NIMMessageSearchParams): Promise<V2NIMMessage[]>; getThreadMessageList(option: V2NIMThreadMessageListOption): Promise<V2NIMThreadMessageListResult>; getLocalThreadMessageList(message: V2NIMMessageRefer): Promise<V2NIMThreadMessageListResult>; deleteMessage(message: V2NIMMessage, l70?: string, m70?: boolean): Promise<void>; deleteMessages(i70: V2NIMMessage[], j70?: string, k70?: boolean): Promise<void>; clearHistoryMessage(option: V2NIMClearHistoryMessageOption): Promise<void>; updateMessageLocalExtension(message: V2NIMMessage, h70: string): Promise<V2NIMMessage>; insertMessageToLocal(message: V2NIMMessage, f70: string, g70?: string, createTime?: number): Promise<V2NIMMessage>; pinMessage(message: V2NIMMessage, e70?: string): Promise<void>; unpinMessage(c70: V2NIMMessageRefer, d70?: string): Promise<void>; updatePinMessage(message: V2NIMMessage, b70?: string): Promise<void>; getPinnedMessageList(a70: string): Promise<V2NIMMessagePin[]>; addQuickComment(message: V2NIMMessage, index: number, y69?: string, z69?: V2NIMMessageQuickCommentPushConfig): Promise<void>; removeQuickComment(w69: V2NIMMessageRefer, index: number, x69?: string): Promise<void>; getQuickCommentList(v69: V2NIMMessage[]): Promise<NIMEStrAnyObj>; addCollection(params: V2NIMAddCollectionParams): Promise<V2NIMCollection>; removeCollections(collections: V2NIMCollection[]): Promise<number>; updateCollectionExtension(t69: V2NIMCollection, u69?: string): Promise<V2NIMCollection>; getCollectionListByOption(option: V2NIMCollectionOption): Promise<V2NIMCollection[]>; sendP2PMessageReceipt(message: V2NIMMessage): Promise<void>; getP2PMessageReceipt(s69: string): Promise<V2NIMP2PMessageReadReceipt>; isPeerRead(message: V2NIMMessage): boolean; sendTeamMessageReceipts(r69: V2NIMMessage[]): Promise<void>; getTeamMessageReceipts(q69: V2NIMMessage[]): Promise<V2NIMTeamMessageReadReceipt[]>; getTeamMessageReceiptDetail(o69: V2NIMMessage, p69?: string[]): Promise<V2NIMTeamMessageReadReceiptDetail>; voiceToText(params: V2NIMVoiceToTextParams): Promise<string>; cancelMessageAttachmentUpload(message: V2NIMMessage): Promise<void>; registerCustomAttachmentParser(n69: V2NIMMessageCustomAttachmentParser): void; unregisterCustomAttachmentParser(l69: V2NIMMessageCustomAttachmentParser): void; searchLocalMessages(params: V2NIMMessageSearchExParams): Promise<V2NIMMessageSearchResult>;     v2IGetUnreadMessageList(j69: string, k69: number): Promise<V2NIMMessage[]>; v2IGetUnreadMessageCount(h69: string, i69: number): Promise<number>; v2IProcessMessageAttachment(message: V2NIMMessage): V2NIMMessage; markMessagesAck(e69: V2NIMMessage[]): void; v2IFormatMessageRefer(message: V2NIMMessage | V2NIMMessageRefer): V2NIMMessageRefer; v2IFormatRevokeMessage(data: NIMEStrAnyObj): V2NIMMessageRevokeNotification;       v2ISyncOfflineMsgsHandler(d69: Packet): Promise<void>;       v2ISyncRoamingMsgsHandler(c69: Packet): Promise<void>;       v2ISyncP2PMessageReceiptsHandler(b69: Packet): Promise<void>;       v2ISyncRevokeMessageHandler(z68: Packet): Promise<void>;       v2ISyncSuperTeamRevokeMessageHandler(x68: Packet): Promise<void>; v2ISyncClearHistoryMessageHandler(w68: Packet): Promise<void>; v2ISyncOnDeleteMessagesHandler(v68: Packet): Promise<void>; v2IUpdateAttachment(u68: string, filePath: string): Promise<void>;       v2ISyncMessageOnModifiedHandler(t68: Packet): Promise<void>;       v2ISyncMessageModifiedRoamHandler(s68: Packet): Promise<void>; private registerInnerService; private unRegisterInnerService;       private onMsgHandler;       private onP2PMessageReceiptsHandler;         private onTeamMessageReceiptsHandler; private onRevokeMessageHandler; private onAddQuickCommentHandler; private onRemoveQuickCommentHandler; private onPinMessageHandler; private onUnpinMessageHandler; private onUpdatePinMessageHandler; private onClearHistoryMessageHandler;       private onDeleteMessageHandler;       private onDeleteMessagesHandler; } 