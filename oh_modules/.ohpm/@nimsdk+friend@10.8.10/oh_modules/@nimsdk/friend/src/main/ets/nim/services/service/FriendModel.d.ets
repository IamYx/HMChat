import { NIM, RdbStoreManager, V2NIMFriendAddApplication, V2NIMFriendAddApplicationQueryOption, V2NIMFriendAddApplicationResult, V2NIMFriendAddApplicationStatus, V2NIMFriendVerifyType } from '@nimsdk/base'; import { V2NIMFriendImpl } from './V2NIMFriendImpl'; export interface NotificationAttachment { vt: V2NIMFriendVerifyType; serverex: string; } export declare class FriendModel { private friendCache; private friendTable; private notificationTable; private core; constructor(g3: NIM, h3: RdbStoreManager);         loadAllFriends(): Promise<void>;               update(y2: string, z2?: string, a3?: string): Promise<void>;           updateFriendInfo(v2: V2NIMFriendImpl): Promise<V2NIMFriendImpl | undefined>;           addFriends(s2: V2NIMFriendImpl[], t2: number): Promise<void>;           addFriendsBySync(o2: V2NIMFriendImpl[], p2: number): Promise<void>;             deleteFriend(m2: string, n2?: boolean): Promise<void>;           checkFriend(k2: string): Promise<boolean>;         getFriendList(): Promise<V2NIMFriendImpl[]>;           queryFriend(c2: string): Promise<V2NIMFriendImpl | undefined>;           getFriendByIds(v1: string[]): Promise<V2NIMFriendImpl[]>;                   getAddApplicationList(p1: V2NIMFriendAddApplicationQueryOption): Promise<V2NIMFriendAddApplicationResult>;         appendFriendAddApplication(o1: V2NIMFriendAddApplication): Promise<void>;       updateFriendAddStatus(l1: string, m1: V2NIMFriendAddApplicationStatus, n1: string): Promise<void>; clearAllAddApplication(): Promise<void>; deleteAddApplication(i1: string, j1: string, k1: number): Promise<void>; setAddApplicationRead(): Promise<void>; getAddApplicationUnreadCount(): Promise<number>; searchFriendByOption(f1: string, g1?: boolean, h1?: boolean): Promise<V2NIMFriendImpl[]>; setFriendTimetag(e1: number): void; getFriendTimetag(): number; } 