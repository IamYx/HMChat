import { HashMap } from '@kit.ArkTS'; import { NIM, NIMServiceConfig, NIMServiceName, Packet, V2NIMCheckFriendResult, V2NIMFriendAddApplication, V2NIMFriendAddApplicationQueryOption, V2NIMFriendAddApplicationResult, V2NIMFriendAddParams, V2NIMFriendDeleteParams, V2NIMFriendListener, V2NIMFriendSearchOption, V2NIMFriendServiceInternal, V2NIMFriendSetParams, V2Service } from '@nimsdk/base'; import { FriendCloud } from './FriendCloud'; import { FriendModel } from './FriendModel'; import { V2NIMFriendImpl } from './V2NIMFriendImpl'; export default class V2NIMFriendServiceImpl extends V2Service<V2NIMFriendListener> implements V2NIMFriendServiceInternal { constructor(d10: NIM, e10: NIMServiceName, f10: NIMServiceConfig); private _model?; get model(): FriendModel; private _cloud?; get cloud(): FriendCloud; onLoginStart(b10: string): Promise<void>; onLoginFinished(a10: string): Promise<void>; onLogout(): void; loadOnLogin(): Promise<void>;       addFriend(v9: string, w9: V2NIMFriendAddParams): Promise<void>;       deleteFriend(p9: string, q9: V2NIMFriendDeleteParams): Promise<void>;       setFriendInfo(m9: string, n9: V2NIMFriendSetParams): Promise<void>;       getFriendList(): Promise<V2NIMFriendImpl[]>;       getFriendByIds(r8: string[]): Promise<V2NIMFriendImpl[]>;       checkFriend(m8: string[]): Promise<V2NIMCheckFriendResult>;       getAddApplicationList(k8: V2NIMFriendAddApplicationQueryOption): Promise<V2NIMFriendAddApplicationResult>;       acceptAddApplication(h8: V2NIMFriendAddApplication): Promise<void>;       rejectAddApplication(a8: V2NIMFriendAddApplication, b8?: string): Promise<void>;       clearAllAddApplication(): Promise<void>; deleteAddApplication(x7: V2NIMFriendAddApplication): Promise<void>; setAddApplicationRead(): Promise<void>; getAddApplicationUnreadCount(): Promise<number>; searchFriendByOption(m7: V2NIMFriendSearchOption): Promise<V2NIMFriendImpl[]>; private handleAddFriend; private handleDeleteFriend; v2IGetFriend(y6: string): Promise<V2NIMFriendImpl | undefined>;           v2IGetLocalFriendAlias(w6: string): Promise<string | undefined>;           v2IGetLocalFriendAliasBatch(p6: string[]): Promise<HashMap<string, string | undefined>>;       v2ISyncFriendListHandler(l6: Packet): Promise<void>;       v2ISyncFriendUserListHandler(i6: Packet): Promise<void>; private setListener;         private v2OnAddFriendHandler;         private v2OnDeleteFriendHandler;       private v2OnUpdateFriendInfoHandler; private handleSetFriendInfo; private handlePassFriendApply; private handleRejectFriendApply; private registerInnerService; private unRegisterInnerService; } 