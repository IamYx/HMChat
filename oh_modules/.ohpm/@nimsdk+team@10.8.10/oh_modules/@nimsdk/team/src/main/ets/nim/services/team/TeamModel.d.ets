import { NIM, PickForRequiredAndPartialTheRest, RdbStoreManager, V2NIMTeam, V2NIMTeamChatBannedMode, V2NIMTeamType } from '@nimsdk/base'; import { V2NIMTeamImpl } from './V2NIMTeamImpl'; import { HashMap } from '@kit.ArkTS'; export declare class TeamModel { private table; constructor(g24: RdbStoreManager, h24: NIM); upsert(f24: V2NIMTeamImpl): Promise<void>; upsertTeams(e24: V2NIMTeamImpl[]): Promise<void>; updateTeamInfo(d24: PickForRequiredAndPartialTheRest<V2NIMTeam, 'teamId' | 'teamType'>): Promise<void>; queryMyTeams(types?: V2NIMTeamType[]): Promise<V2NIMTeamImpl[]>; queryMyTeamsCount(): Promise<number>; getTeamInfo(a24: string, b24: V2NIMTeamType, c24?: boolean): Promise<V2NIMTeamImpl | undefined>; getTeamInfoByIds(x23: string[], y23: V2NIMTeamType, z23?: boolean): Promise<V2NIMTeamImpl[]>; getTeamsInfo(v23: V2NIMTeamType, w23?: boolean): Promise<V2NIMTeamImpl[]>; setTeamInfo(u23: V2NIMTeamImpl): Promise<void>; updateChatMode(r23: string, s23: V2NIMTeamType, t23: V2NIMTeamChatBannedMode): Promise<void>; queryTeams(p23: string[], q23: V2NIMTeamType): Promise<V2NIMTeamImpl[]>; setTeams(o23: V2NIMTeamImpl[]): Promise<void>; searchByKeyword(n23: string): Promise<V2NIMTeamImpl[]>; deleteById(k23: string, l23: V2NIMTeamType): Promise<undefined | V2NIMTeamImpl>; isValidTeam(i23: string, j23: V2NIMTeamType): Promise<boolean>; getMemberUpdateTimeMap(h23: V2NIMTeamType): Promise<HashMap<string, number>>; updateMemberUpdateTimeMap(f23: string, type: V2NIMTeamType, g23: number): Promise<void>; } 