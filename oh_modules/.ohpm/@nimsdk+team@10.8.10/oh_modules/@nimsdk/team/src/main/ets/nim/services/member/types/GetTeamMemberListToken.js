import { get } from "@nimsdk/vendor"; export var QueryTeamMemberMode; (function (p15) { p15[p15["REMOTE"] = 0] = "REMOTE"; p15[p15["LOCAL"] = 1] = "LOCAL"; p15[p15["SYNC_AND_LOCAL"] = 2] = "SYNC_AND_LOCAL"; })(QueryTeamMemberMode || (QueryTeamMemberMode = {})); export class GetTeamMemberListToken { constructor(isLocal, localOffset, o15) { this.isLocal = isLocal; this.localOffset = localOffset; this.remoteOffset = o15; } static buildByTokenStr(n15) { if (typeof n15 === 'undefined' || n15 === '') { return undefined; } let offset = undefined; try { offset = get(JSON.parse(n15), 'localOffset'); } catch (e) { } if (typeof offset !== 'undefined' && offset >= 0) { return GetTeamMemberListToken.buildByLocalOffset(offset); } else { return GetTeamMemberListToken.buildByRemoteOffset(n15); } } static buildByLocalOffset(localOffset) { const m15 = new GetTeamMemberListToken(true, localOffset, ''); return m15; } static buildByRemoteOffset(k15) { const l15 = new GetTeamMemberListToken(false, 0, k15); return l15; } toLocalString() { return JSON.stringify({ 'localOffset': this.localOffset }); } getLocalOffset() { return this.localOffset; } getRemoteOffset() { return this.remoteOffset; } isLocalToken() { return this.isLocal; } } 