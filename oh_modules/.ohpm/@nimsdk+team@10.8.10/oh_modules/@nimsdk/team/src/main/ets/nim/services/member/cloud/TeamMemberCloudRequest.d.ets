import { V2NIMQueryDirection, V2NIMTeamMemberRoleQueryType, V2NIMTeamType } from '@nimsdk/base';           export declare class TeamGetMemberInvitorRequest { teamId: string; accounts: string[]; constructor(u2: string, v2: string[]); }           export declare class TeamMemberGetListByIdsRequest { tag: string[]; constructor(tag: string[]); }         export declare class TeamMemberSetChatBannedStatusRequest { teamId: string; accountId: string; chatBanned: number; constructor(s2: string, accountId: string, t2: number); }         export declare class SuperTeamMemberSetChatBannedStatusRequest { teamId: string; accountId: string[]; chatBanned: number; constructor(o2: string, q2: string[], r2: number); }           export declare class TeamUpdateMemberRequest { teamMember: TeamMemberRequest; constructor(n2: TeamMemberRequest); }       export declare class TeamMemberRequest { teamNick: string; teamId: string; accountId: string; constructor(l2: string, m2: string, accountId: string); }           export declare class TeamUpdateSelfMemberInfoRequest { teamMember: TeamUpdateSelfMemberInfo; constructor(k2: TeamUpdateSelfMemberInfo); } export declare class TeamUpdateSelfMemberInfo { teamId: string; accountId: string; teamNick: string | undefined; serverExtension: string | undefined; constructor(h2: string, accountId: string, i2: string | undefined, j2: string | undefined); }               export declare class TeamUpdateTeamMemberRoleRequest { teamId: string; accounts: string[]; constructor(f2: string, g2: string[]); }           export declare class TeamRejectJoinApplicationRequest { teamId: string; from: string; ps: string; constructor(d2: string, from: string, e2: string); }           export declare class TeamAcceptJoinApplicationRequest { teamId: string; from: string; constructor(c2: string, from: string); }           export declare class TeamApplyToJoinRequest { teamId: string; ps: string; constructor(a2: string, b2: string); }           export declare class TeamKickMembersRequest { teamId: string; accounts: string[]; constructor(w1: string, z1: string[]); }           export declare class TeamRejectInviteRequest { teamId: string; from: string; ps: string; constructor(u1: string, from: string, v1: string); }           export declare class TeamAcceptInvitationRequest { teamId: string; from: string; constructor(t1: string, from: string); }           export declare class TeamInviteMembersRequest { teamId: string; accounts: string[]; ps: string; attach: string; constructor(p1: string, q1: string[], s1: string, attach: string); }         export declare class TeamMemberGetListRequest { tag: TeamMemberGetListParam; constructor(tag: TeamMemberGetListParam); }       export declare class TeamMemberGetListParam { teamId: string; teamType: V2NIMTeamType; roleQueryType: V2NIMTeamMemberRoleQueryType; onlyChatBanned: boolean; limit: number; nextToken: string; direction: V2NIMQueryDirection; constructor(k1: string, l1: V2NIMTeamType, m1: V2NIMTeamMemberRoleQueryType, n1: boolean, limit: number, o1: string, direction: V2NIMQueryDirection); }         export declare class TeamMemberDoSyncRequest { teamId: string; timetag: number; constructor(i1: string, j1: number); }         export declare class SuperTeamMemberDoSyncRequest { teamId: string; timetag: number; constructor(g1: string, h1: number); } 