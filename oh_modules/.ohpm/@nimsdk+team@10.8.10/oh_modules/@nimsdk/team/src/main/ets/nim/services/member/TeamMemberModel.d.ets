import { NIM, RdbStoreManager, V2NIMSortOrder, V2NIMTeamMemberQueryOption, V2NIMTeamType } from '@nimsdk/base'; import { HashMap } from '@kit.ArkTS'; import { V2NIMTeamMemberImpl } from './V2NIMTeamMemberImpl'; import { TeamMemberListResult } from './cloud/TeamMemberCloudResult'; import { GetTeamMemberListToken } from './types/GetTeamMemberListToken'; export default class TeamMemberModel {                               private table; constructor(v8: RdbStoreManager, w8: NIM);               updateMembersOfSelf(m8: V2NIMTeamType, n8: string, o8: V2NIMTeamMemberImpl[]): Promise<void>; getById(k8: V2NIMTeamType, l8: string, accountId: string): Promise<V2NIMTeamMemberImpl | undefined>; getByTeams(i8: V2NIMTeamType, j8: string[], accountId: string): Promise<V2NIMTeamMemberImpl[]>; getByIds(f8: V2NIMTeamType, g8: string, h8: string[]): Promise<V2NIMTeamMemberImpl[]>; queryByOptions(x7: V2NIMTeamType, y7: string, z7: V2NIMTeamMemberQueryOption, token: GetTeamMemberListToken | undefined): Promise<TeamMemberListResult>; getByKeyword(u7: string, v7: V2NIMTeamType, order: V2NIMSortOrder, w7?: string): Promise<V2NIMTeamMemberImpl[]>; upsert(member: V2NIMTeamMemberImpl | V2NIMTeamMemberImpl[]): Promise<void>;               deleteOneAndReturn(r7: V2NIMTeamType, s7: string, account: string): Promise<V2NIMTeamMemberImpl | undefined>; deleteOne(p7: V2NIMTeamType, q7: string, account: string): Promise<number>; deleteByTeamId(n7: V2NIMTeamType, o7: string): Promise<number>; deleteByAccountId(m7: V2NIMTeamType, account: string): Promise<number>;             updateTeamMemberInvitor(j7: V2NIMTeamType, k7: string, l7: HashMap<string, string>): Promise<void>; updateTeamMemberValidByTeamId(g7: V2NIMTeamType, h7: string, i7: boolean): Promise<void>; } 