import { V2NIMErrorImpl, V2NIMErrorMap, V2NIMTeamJoinActionStatus, V2NIMTeamJoinActionType, V2NIMTeamType } from '@nimsdk/base'; import { get } from '@nimsdk/vendor'; import { TeamSystemMessageTable } from './TeamNotificationTable'; export default class TeamNotificationModel { constructor(x17, y17) { this.systemMessageTable = new TeamSystemMessageTable(x17, y17); } reset() { } async save(w17) { await this.systemMessageTable.saveSystemMessage(w17); } async createTeamMemberTable() { await this.systemMessageTable.createTable(); } convertSystemMessageType(actionType, v17) { if (actionType === null || v17 === null) { return null; } switch (actionType) { case V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_APPLICATION: if (v17 === V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER) { return 15; } else { return 0; } case V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_REJECT_APPLICATION: if (v17 === V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER) { return 16; } else { return 1; } case V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_INVITATION: if (v17 === V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER) { return 17; } else { return 2; } case V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_REJECT_INVITATION: if (v17 === V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER) { return 18; } else { return 3; } default: return null; } } async update(s17, t17) { let u17 = this.convertSystemMessageType(s17.actionType, s17.teamType); if (u17 == null) { throw new V2NIMErrorImpl({ code: V2NIMErrorMap.V2NIM_ERROR_CODE_PARAMETER_ERROR.code, desc: V2NIMErrorMap.V2NIM_ERROR_CODE_PARAMETER_ERROR.message, detail: { reason: `invalid systemType: ${s17.actionType} ${s17.teamType}` } }); } else { await this.systemMessageTable.updateTeamSystemMessageStatus(s17, u17, t17); } } getByOption(option) { return this.systemMessageTable.queryTeamSystemMessages(option); } clearAllTeamJoinActionInfo() { return this.systemMessageTable.clearAllTeamJoinActionInfo(); } async deleteTeamJoinActionInfo(o17, p17, q17, actionType, timestamp) { const r17 = this.convertSystemMessageType(actionType, p17); if (r17 == null) { throw new V2NIMErrorImpl({ code: V2NIMErrorMap.V2NIM_ERROR_CODE_PARAMETER_ERROR.code, desc: V2NIMErrorMap.V2NIM_ERROR_CODE_PARAMETER_ERROR.message, detail: { reason: `invalid systemType: ${actionType} ${p17}` } }); } else { return this.systemMessageTable.deleteTeamJoinActionInfo(o17, r17, q17, timestamp); } } } export function convert(notification) { const i17 = get(notification, 'receiverId'); const j17 = get(notification, 'postscript'); const k17 = get(notification, 'senderId'); const timestamp = get(notification, 'timestamp'); const type = get(notification, 'type'); const status = get(notification, 'status'); let l17 = ''; try { l17 = get(JSON.parse(get(notification, 'content')), 'attach'); } catch (e) { l17 = undefined; } const map = { 0: V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_APPLICATION, 1: V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_REJECT_APPLICATION, 2: V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_INVITATION, 3: V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_REJECT_INVITATION, 15: V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_APPLICATION, 16: V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_REJECT_APPLICATION, 17: V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_INVITATION, 18: V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_REJECT_INVITATION }; const actionType = map[type]; const m17 = type >= 15 ? V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER : V2NIMTeamType.V2NIM_TEAM_TYPE_NORMAL; let n17 = V2NIMTeamJoinActionStatus.V2NIM_TEAM_JOIN_ACTION_STATUS_INIT; switch (status) { case 0: n17 = V2NIMTeamJoinActionStatus.V2NIM_TEAM_JOIN_ACTION_STATUS_INIT; break; case 1: n17 = V2NIMTeamJoinActionStatus.V2NIM_TEAM_JOIN_ACTION_STATUS_AGREED; break; case 2: n17 = V2NIMTeamJoinActionStatus.V2NIM_TEAM_JOIN_ACTION_STATUS_REJECTED; break; case 3: n17 = V2NIMTeamJoinActionStatus.V2NIM_TEAM_JOIN_ACTION_STATUS_EXPIRED; break; } const data = { actionType: actionType, teamId: i17, teamType: m17, operatorAccountId: k17, postscript: j17, timestamp: timestamp, actionStatus: n17, serverExtension: l17 }; return data; } 