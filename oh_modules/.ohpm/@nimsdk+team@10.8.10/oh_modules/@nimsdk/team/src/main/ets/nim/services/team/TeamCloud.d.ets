import { NIM, PickForRequiredAndPartialTheRest, V2NIMAntispamConfig, V2NIMCreateTeamParams, V2NIMCreateTeamResult, V2NIMTeam, V2NIMTeamAgreeMode, V2NIMTeamChatBannedMode, V2NIMTeamInviteMode, V2NIMTeamJoinMode, V2NIMTeamMessageNotifyMode, V2NIMTeamType, V2NIMTeamUpdateExtensionMode, V2NIMTeamUpdateInfoMode } from '@nimsdk/base'; import { V2NIMTeamImpl } from './V2NIMTeamImpl'; export interface V2NIMTeamRemote extends V2NIMTeam { teamId: string; teamType: V2NIMTeamType; name: string; ownerAccountId: string; memberLimit: number; memberCount: number; createTime: number; updateTime: number; intro: string; announcement: string; avatar: string; serverExtension?: string; customerExtension?: string; joinMode: V2NIMTeamJoinMode; agreeMode: V2NIMTeamAgreeMode; inviteMode: V2NIMTeamInviteMode; updateInfoMode: V2NIMTeamUpdateInfoMode; updateExtensionMode: V2NIMTeamUpdateExtensionMode; chatBannedMode: V2NIMTeamChatBannedMode; isValidTeam: boolean; messageNotifyMode: V2NIMTeamMessageNotifyMode;       memberUpdateTime: number; } export declare class TeamCloud { private core; constructor(e23: NIM); createTeam(w22: V2NIMCreateTeamParams, x22?: string[], y22?: string, z22?: V2NIMAntispamConfig): Promise<V2NIMCreateTeamResult>; leaveTeam(t22: string, u22: V2NIMTeamType): Promise<void>; setTeamChatBannedMode(p22: string, q22: V2NIMTeamType, r22: V2NIMTeamChatBannedMode): Promise<void>; getTeamInfo(j22: string, k22: V2NIMTeamType): Promise<V2NIMTeamImpl>; updateTeamInfo(e22: PickForRequiredAndPartialTheRest<V2NIMTeam, 'teamId' | 'teamType'>, f22?: V2NIMAntispamConfig | undefined): Promise<number>; transferTeamOwner(a22: string, b22: V2NIMTeamType, accountId: string, c22?: boolean): Promise<void>; dismissTeam(x21: string, y21: V2NIMTeamType): Promise<void>; getTeamInfoByIds(s21: string[], t21: V2NIMTeamType): Promise<V2NIMTeamImpl[]>; } 