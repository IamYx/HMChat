import { getEnumValues, V2NIMQueryDirection, V2NIMSortOrder, V2NIMTeamAgreeMode, V2NIMTeamChatBannedMode, V2NIMTeamInviteMode, V2NIMTeamJoinActionStatus, V2NIMTeamJoinActionType, V2NIMTeamJoinMode, V2NIMTeamMemberRole, V2NIMTeamMemberRoleQueryType, V2NIMTeamMessageNotifyMode, V2NIMTeamType, V2NIMTeamUpdateExtensionMode, V2NIMTeamUpdateInfoMode } from '@nimsdk/base'; const b21 = { joinMode: { type: 'enum', values: getEnumValues(V2NIMTeamJoinMode), required: false }, agreeMode: { type: 'enum', values: getEnumValues(V2NIMTeamAgreeMode), required: false }, inviteMode: { type: 'enum', values: getEnumValues(V2NIMTeamInviteMode), required: false }, updateInfoMode: { type: 'enum', values: getEnumValues(V2NIMTeamUpdateInfoMode), required: false }, updateExtensionMode: { type: 'enum', values: getEnumValues(V2NIMTeamUpdateExtensionMode), required: false }, chatBannedMode: { type: 'enum', values: [ V2NIMTeamChatBannedMode.V2NIM_TEAM_CHAT_BANNED_MODE_UNBAN, V2NIMTeamChatBannedMode.V2NIM_TEAM_CHAT_BANNED_MODE_BANNED_NORMAL ], required: false } }; export const createTeamParamsRule = { type: 'object', required: true, rules: { name: { type: 'string', allowEmpty: false }, teamType: { type: 'enum', values: [V2NIMTeamType.V2NIM_TEAM_TYPE_NORMAL, V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER] }, memberLimit: { type: 'number', min: 1, required: false }, ...b21 } }; export const strArrayRule = { type: 'array', min: 1, itemType: 'string' }; export const booleanRule = { type: 'boolean' }; export const stringRule = { type: 'string' }; export const stringNotEmptyRule = { type: 'string', allowEmpty: false }; export const antispamConfigRule = { type: 'object', rules: { antispamBusinessId: { type: 'string', required: false } }, required: false }; export const teamIdRules = { teamId: { type: 'string', regExp: /^[1-9]\d*$/, allowEmpty: false } }; export const teamIdsRules = { teamIds: { type: 'array', itemType: 'string', regExp: /^[1-9]\d*$/, min: 1, allowEmpty: false } }; export const teamTypeRules = { teamType: { type: 'enum', values: [V2NIMTeamType.V2NIM_TEAM_TYPE_NORMAL, V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER] } }; export const teamTypesRules = { teamTypes: { type: 'array', itemType: 'enum', values: [V2NIMTeamType.V2NIM_TEAM_TYPE_NORMAL, V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER], required: false } }; export const updateTeamInfoParamsRules = { updateTeamInfoParams: { type: 'object', required: true, rules: { name: { type: 'string', allowEmpty: false, required: false }, memberLimit: { type: 'number', min: 1, required: false }, ...b21 } } }; export const memberRoleRule = { type: 'enum', values: [V2NIMTeamMemberRole.V2NIM_TEAM_MEMBER_ROLE_NORMAL, V2NIMTeamMemberRole.V2NIM_TEAM_MEMBER_ROLE_MANAGER] }; export const memberInfoParamsRules = { memberInfoParams: { type: 'object', rules: { teamNick: { type: 'string', required: false }, serverExtension: { type: 'string', required: false } } } }; export const notifyModeRules = { notifyMode: { type: 'enum', values: getEnumValues(V2NIMTeamMessageNotifyMode) } }; export const chatBannedModeRules = { chatBannedMode: { type: 'enum', values: [V2NIMTeamChatBannedMode.V2NIM_TEAM_CHAT_BANNED_MODE_UNBAN, V2NIMTeamChatBannedMode.V2NIM_TEAM_CHAT_BANNED_MODE_BANNED_NORMAL] } }; export const queryOptionRules = { queryOption: { type: 'object', rules: { roleQueryType: { type: 'enum', values: getEnumValues(V2NIMTeamMemberRoleQueryType), required: false }, onlyChatBanned: { type: 'boolean', required: false }, direction: { type: 'enum', values: getEnumValues(V2NIMQueryDirection), required: false }, limit: { type: 'number', min: 1, required: false }, nextToken: { type: 'string', required: false } } } }; export const searchOptionRules = { searchOption: { type: 'object', rules: { keyword: { type: 'string', required: true, allowEmpty: false }, teamType: { type: 'enum', values: [ V2NIMTeamType.V2NIM_TEAM_TYPE_NORMAL, V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER ], required: true }, nextToken: { type: 'string', required: true, allowEmpty: true }, order: { type: 'enum', values: getEnumValues(V2NIMSortOrder), required: false }, limit: { type: 'number', min: 1, required: false } } } }; export const teamJoinActionInfoRules = { teamId: teamIdRules.teamId, teamType: { type: 'enum', values: [V2NIMTeamType.V2NIM_TEAM_TYPE_NORMAL, V2NIMTeamType.V2NIM_TEAM_TYPE_SUPER] }, operatorAccountId: { type: 'string', allowEmpty: false } }; export const invitationInfoRules = { actionType: { type: 'enum', values: [V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_INVITATION] } }; export const applicationInfoRules = { actionType: { type: 'enum', values: [V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_APPLICATION] } }; export const getTeamJoinActionInfoListOptionRules = { types: { type: 'array', itemType: 'enum', values: getEnumValues(V2NIMTeamJoinActionType), required: false }, status: { type: 'array', itemType: 'enum', values: getEnumValues(V2NIMTeamJoinActionStatus), required: false }, offset: { type: 'number', min: 0, required: false }, limit: { type: 'number', min: 1, required: false } }; export const actionTypeRules = { actionType: { type: 'enum', values: [ V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_INVITATION, V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_APPLICATION, V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_REJECT_APPLICATION, V2NIMTeamJoinActionType.V2NIM_TEAM_JOIN_ACTION_TYPE_REJECT_INVITATION ] } }; 