import { NIM, NIMEStrAnyObj, RdbStoreManager, V2NIMMessage, V2NIMTeamJoinActionInfo, V2NIMTeamJoinActionInfoQueryOption, V2NIMTeamJoinActionInfoResult, V2NIMTeamJoinActionStatus, V2NIMTeamType, V2NIMTeamJoinActionType } from '@nimsdk/base'; import { V2NIMTeamMemberImpl } from '../member/V2NIMTeamMemberImpl'; import { V2NIMTeamImpl } from '../team/V2NIMTeamImpl'; import V2NIMTeamServiceImpl from '../V2NIMTeamServiceImpl'; import TeamNotificationModel from './TeamNotificationModel'; export declare class TeamNotificationService { private core; private service; private notificationProcessor; constructor(n20: NIM, o20: RdbStoreManager, service: V2NIMTeamServiceImpl); private _notificationModel?; get notificationModel(): TeamNotificationModel; onLogin(): Promise<void>; onLogout(): void; acceptJoinApplication(applicationInfo: V2NIMTeamJoinActionInfo): Promise<void>; rejectJoinApplication(applicationInfo: V2NIMTeamJoinActionInfo, m20?: string): Promise<void>; getTeamJoinActionInfoList(option: V2NIMTeamJoinActionInfoQueryOption): Promise<V2NIMTeamJoinActionInfoResult>; clearAllTeamJoinActionInfo(): Promise<void>; deleteTeamJoinActionInfo(j20: string, k20: V2NIMTeamType, l20: string, actionType: V2NIMTeamJoinActionType, timestamp: number): Promise<void>;         enqueueProcessNotification(msg: V2NIMMessage): void; private processNotification;                 onTeamMemberInfoUpdated(s19: V2NIMTeamMemberImpl[]): Promise<void>; processSysNotification(notification: NIMEStrAnyObj): Promise<void>; updateTeamActionStatus(notification: V2NIMTeamJoinActionInfo, q19: V2NIMTeamJoinActionStatus): Promise<void>; acceptInvitation(o19: V2NIMTeamJoinActionInfo): Promise<V2NIMTeamImpl>; rejectInvitation(m19: V2NIMTeamJoinActionInfo, n19?: string): Promise<void>; private registerInnerService; private unRegisterInnerService;                   private onTeamJoined;                       private onTeamLeft;               private onTeamDismissed;             private onTeamInfoUpdated;               private onTeamMemberJoined;           private onTeamMembersJoined;             private onTeamMemberLeft;             private onTeamMemberKicked; private checkIfExpired;             private generateInvalidTeam; } 