import { NIM, V2NIMTeamJoinActionInfo, V2NIMTeamMember, V2NIMTeamMemberQueryOption, V2NIMTeamMemberRole, V2NIMTeamType, V2NIMUpdateSelfMemberInfoParams } from '@nimsdk/base'; import { V2NIMTeamImpl } from '../team/V2NIMTeamImpl'; import { TeamMemberListResult, NormalTeamMemberDoSyncResult, SuperTeamMemberDoSyncResult } from './cloud/TeamMemberCloudResult'; import { HashMap } from '@kit.ArkTS'; import { V2NIMTeamMemberImpl } from './V2NIMTeamMemberImpl';         export interface V2NIMTeamMemberRemote extends V2NIMTeamMember { teamId: string; teamType: V2NIMTeamType; accountId: string; memberRole: V2NIMTeamMemberRole; teamNick?: string; serverExtension?: string; joinTime: number; updateTime?: number; invitorAccountId?: string; inTeam: boolean; chatBanned?: boolean;             bits?: number; } export declare class TeamMemberCloud { private core; constructor(f7: NIM); getTeamMemberInvitor(z6: string, a7: V2NIMTeamType, b7: string[]): Promise<HashMap<string, string>>; getTeamMemberListByIds(s6: string, t6: V2NIMTeamType, u6: string[]): Promise<V2NIMTeamMemberImpl[]>; setTeamMemberChatBannedStatus(n6: string, o6: V2NIMTeamType, accountId: string, p6: boolean): Promise<void>; updateTeamMemberNick(i6: string, j6: V2NIMTeamType, accountId: string, k6: string): Promise<void>; updateSelfTeamMemberInfo(d6: V2NIMTeamType, e6: string, f6: V2NIMUpdateSelfMemberInfoParams): Promise<void>; updateTeamMemberRole(y5: string, z5: V2NIMTeamType, a6: string[], b6: V2NIMTeamMemberRole): Promise<void>; rejectJoinApplication(applicationInfo: V2NIMTeamJoinActionInfo, t5?: string): Promise<void>; acceptJoinApplication(applicationInfo: V2NIMTeamJoinActionInfo): Promise<void>; applyJoinTeam(h5: string, i5: V2NIMTeamType, j5?: string): Promise<V2NIMTeamImpl>; kickMember(d5: string, e5: V2NIMTeamType, f5: string[]): Promise<void>; rejectInvitation(x4: V2NIMTeamJoinActionInfo, y4?: string): Promise<void>; acceptInvitation(p4: V2NIMTeamJoinActionInfo): Promise<V2NIMTeamImpl>; inviteMember(i4: string, j4: V2NIMTeamType, k4: string[], l4?: string, m4?: string): Promise<string[]>; getTeamMemberList(b4: string, c4: V2NIMTeamType, d4: V2NIMTeamMemberQueryOption): Promise<TeamMemberListResult>;             normalTeamMemberDoSync(v3: string, w3: number): Promise<NormalTeamMemberDoSyncResult>;             superTeamMemberDoSync(r3: string, s3: number): Promise<SuperTeamMemberDoSyncResult>; } export declare function processTeamMember(p3: V2NIMTeamMemberRemote, q3: V2NIMTeamType): V2NIMTeamMemberRemote; export declare function processTeamMembers(m3: V2NIMTeamMemberRemote[], n3: V2NIMTeamType): V2NIMTeamMemberRemote[]; export declare function coverV2NIMTeamMemberFieldByAnother(to: V2NIMTeamMemberImpl, from: Partial<V2NIMTeamMemberRemote>): void; 