import { getEnumValues, V2NIMSignallingChannelType } from '@nimsdk/base'; export const createRoomRule = { channelType: { type: 'enum', required: true, values: getEnumValues(V2NIMSignallingChannelType) }, channelName: { type: 'string', required: false }, channelExtension: { type: 'string', required: false } }; export const closeRoomRule = { channelId: { type: 'string', required: true, allowEmpty: false }, offlineEnabled: { type: 'boolean', required: false }, serverExtension: { type: 'string', required: false } }; export const joinRoomRule = { channelId: { type: 'string', required: true, allowEmpty: false }, serverExtension: { type: 'string', required: false, allowEmpty: true }, signallingConfig: { type: 'object', required: false, rules: { offlineEnabled: { type: 'boolean', required: false }, unreadEnabled: { type: 'boolean', required: false }, selfUid: { type: 'number', required: false } } }, rtcConfig: { type: 'object', required: false, rules: { rtcChannelName: { type: 'string', required: false }, rtcTokenTtl: { type: 'number', required: false }, rtcParams: { type: 'string', required: false } } } }; export const callRule = { calleeAccountId: { type: 'string', required: true, allowEmpty: false }, requestId: { type: 'string', required: true, allowEmpty: false }, channelType: { type: 'enum', required: true, values: getEnumValues(V2NIMSignallingChannelType) }, channelName: { type: 'string', required: false }, channelExtension: { type: 'string', required: false }, serverExtension: { type: 'string', required: false }, signallingConfig: { type: 'object', required: false }, pushConfig: { type: 'object', required: false }, rtcConfig: { type: 'object', required: false } }; export const createCallSetupRule = { channelId: { type: 'string', required: true, allowEmpty: false }, callerAccountId: { type: 'string', required: true, allowEmpty: false }, requestId: { type: 'string', required: true, allowEmpty: false }, serverExtension: { type: 'string', required: false }, signallingConfig: { type: 'object', required: false }, rtcConfig: { type: 'object', required: false } }; export const leaveRoomRule = { channelId: { type: 'string', required: true, allowEmpty: false }, offlineEnabled: { type: 'boolean', required: false }, serverExtension: { type: 'string', required: false } }; export const inviteRoomRule = { channelId: { type: 'string', required: true, allowEmpty: false }, inviteeAccountId: { type: 'string', required: true, allowEmpty: false }, requestId: { type: 'string', required: true, allowEmpty: false }, serverExtension: { type: 'string', required: false }, signallingConfig: { type: 'object', required: false, rules: { offlineEnabled: { type: 'boolean', required: false }, unreadEnabled: { type: 'boolean', required: false }, selfUid: { type: 'number', required: false } } }, pushConfig: { type: 'object', required: false, rules: { pushEnabled: { type: 'boolean', required: false }, pushTitle: { type: 'string', required: false, allowEmpty: true }, pushContent: { type: 'string', required: false, allowEmpty: true }, pushPayload: { type: 'string', required: false, allowEmpty: true } } } }; export const cancelInviteParamsRule = { channelId: { type: 'string', required: true, allowEmpty: false }, inviteeAccountId: { type: 'string', required: true, allowEmpty: false }, requestId: { type: 'string', required: true, allowEmpty: false }, serverExtension: { type: 'string', required: false }, offlineEnabled: { type: 'boolean', required: false } }; export const rejectInviteRule = { channelId: { type: 'string', required: true, allowEmpty: false }, inviterAccountId: { type: 'string', required: true, allowEmpty: false }, requestId: { type: 'string', required: true, allowEmpty: false }, offlineEnabled: { type: 'boolean', required: false }, serverExtension: { type: 'string', required: false } }; export const acceptInviteRule = { channelId: { type: 'string', required: true, allowEmpty: false }, inviterAccountId: { type: 'string', required: true, allowEmpty: false }, requestId: { type: 'string', required: true, allowEmpty: false }, offlineEnabled: { type: 'boolean', required: false }, serverExtension: { type: 'string', required: false } }; export const sendControl = { channelId: { type: 'string', required: true, allowEmpty: false }, receiverAccountId: { type: 'string', required: false }, serverExtension: { type: 'string', required: false } }; export const getRoomInfoRule = { channelName: { type: 'string', required: true, allowEmpty: false } }; export const signalPushInfoRule = { needPush: { type: 'boolean', required: false }, pushTitle: { type: 'string', required: false }, pushContent: { type: 'string', required: false }, pushPayload: { type: 'string', required: false }, needPushBadge: { type: 'boolean', required: false } }; export const signalPushSerializeMap = { needPush: 13, pushTitle: 14, pushContent: 15, pushPayload: 16, needPushBadge: 17 }; 