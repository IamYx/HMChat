import { V2NIMSignallingCallResult, V2NIMSignallingCallSetupResult, V2NIMSignallingChannelInfo, V2NIMSignallingJoinResult, V2NIMSignallingRoomInfo } from '@nimsdk/base'; export declare class SignalingBatchMarkReadRequest { sid: number; cid: number; ids: number[]; constructor(a6: number, b6: number, ids: number[]); } export declare class SignallingCreateTag { type: number; channelName?: string; ext?: string; constructor(type: number, name?: string, z5?: string); } export declare class SignalingCreateRequest { tag: SignallingCreateTag; constructor(tag: SignallingCreateTag); } export interface CreateResponseData { type: number; channelId: string; channelName: string; channelCreateTime: number; channelExpireTime: number; channelValid: boolean; creator: string; ext: string; } export declare class SignalingDelayTag { channelId: string; constructor(y5: string); } export declare class SignalingDelayRequest { tag: SignalingDelayTag; constructor(tag: SignalingDelayTag); } export interface DelayResponseData { type: number; channelName: string; channelId: string; channelCreateTime: number; channelExpireTime: number; channelValid: boolean; creator: string; members: string; ext: string; } export declare class SignalingCloseTag { channelId: string; isSave?: boolean; attachExt?: string; constructor(v5: string, w5?: boolean, x5?: string); } export declare class SignalingCloseRequest { tag: SignalingCloseTag; constructor(tag: SignalingCloseTag); } export declare class SignalingJoinTag { channelId: string; attachExt?: string; isSave?: boolean; uid?: number; rtcChannelName?: string; rtcTokenTtl?: number; rtcJoinRoomQueryParamMap?: string; constructor(p5: string, q5?: string, r5?: boolean, uid?: number, s5?: string, t5?: number, u5?: string); } export declare class SignalingJoinRequest { tag: SignalingJoinTag; constructor(tag: SignalingJoinTag); } export interface JoinResponseData { type: number; channelName: string; channelId: string; channelCreateTime: number; channelExpireTime: number; creator: string; members: string; channelValid: boolean; rtcTokenTtl: number; rtcToken: string; rtcJoinRoomResponse: string; ext: string; } export declare class SignalingLeaveTag { channelId: string; isSave?: boolean; attachExt?: string; constructor(m5: string, n5?: boolean, o5?: string); } export declare class SignalingLeaveRequest { tag: SignalingLeaveTag; constructor(tag: SignalingLeaveTag); } export declare class SignalingInviteTag { channelId: string; to: string; requestId: string; needPush?: boolean; pushTitle?: string; pushContent?: string; pushPayload?: string; needBadge?: boolean; attachExt?: string; isSave?: boolean; constructor(e5: string, to: string, requestId: string, f5?: boolean, g5?: boolean, h5?: string, i5?: string, j5?: string, k5?: string, l5?: boolean); } export declare class SignalingInviteRequest { tag: SignalingInviteTag; constructor(tag: SignalingInviteTag); } export declare class SignalingCancelInviteTag { channelId: string; to: string; requestId: string; attachExt?: string; isSave?: boolean; constructor(b5: string, to: string, requestId: string, c5?: string, d5?: boolean); } export declare class SignalingCancelInviteRequest { tag: SignalingCancelInviteTag; constructor(tag: SignalingCancelInviteTag); } export declare class SignalingRejectInviteTag { channelId: string; to: string; requestId: string; attachExt?: string; isSave?: boolean; constructor(y4: string, to: string, requestId: string, z4?: string, a5?: boolean); } export declare class SignalingRejectInviteRequest { tag: SignalingRejectInviteTag; constructor(tag: SignalingRejectInviteTag); } export declare class SignalingAcceptInviteTag { channelId: string; to: string; requestId: string; attachExt?: string; isSave?: boolean; constructor(v4: string, to: string, requestId: string, w4?: string, x4?: boolean); } export declare class SignalingAcceptInviteRequest { tag: SignalingAcceptInviteTag; constructor(tag: SignalingAcceptInviteTag); } export declare class SignalingCtrlTag { channelId: string; to?: string; attachExt?: string; constructor(t4: string, to?: string, u4?: string); } export declare class SignalingCtrlRequest { tag: SignalingCtrlTag; constructor(tag: SignalingCtrlTag); } export declare class SignalingGetRoomInfoTag { channelName: string; constructor(s4: string); } export declare class SignalingGetRoomInfoRequest { tag: SignalingGetRoomInfoTag; constructor(tag: SignalingGetRoomInfoTag); } export interface GetRoomInfoResponseData { type: number; channelName: string; channelId: string; channelCreateTime: number; channelExpireTime: number; channelValid: boolean; creator: string; members: string; ext: string; } export declare class SignalingCallTag { type: number; to: string; requestId: string; channelName?: string; ext?: string; uid?: number; needPush?: boolean; pushTitle?: string; pushContent?: string; pushPayload?: string; needBadge?: boolean; attachExt?: string; isSave?: boolean; rtcChannelName?: string; rtcTokenTtl?: number; rtcJoinRoomQueryParamMap?: string; constructor(type: number, to: string, requestId: string, g4?: string, h4?: string, uid?: number, i4?: boolean, j4?: string, k4?: string, l4?: string, m4?: boolean, n4?: string, o4?: boolean, p4?: string, q4?: number, r4?: string); } export declare class SignalingCallRequest { tag: SignalingCallTag; constructor(tag: SignalingCallTag); } export interface CallResponseData { type: number; channelName: string; channelId: string; channelCreateTime: number; channelExpireTime: number; channelValid: boolean; creator: string; members: string; rtcTokenTtl: number; rtcToken: string; rtcJoinRoomResponse: string; ext: string; callStatus: number; } export declare class SignalingJoinAndAcceptTag { channelId: string; to: string; requestId: string; uid?: number; attachExt?: string; isSave?: boolean; rtcChannelName?: string; rtcTokenTtl?: number; rtcJoinRoomQueryParamMap?: string; constructor(a4: string, to: string, requestId: string, uid?: number, b4?: string, c4?: boolean, d4?: string, e4?: number, f4?: string); } export declare class SignalingJoinAndAcceptRequest { tag: SignalingJoinAndAcceptTag; constructor(tag: SignalingJoinAndAcceptTag); } export interface JoinAndAcceptResponseData { type: number; channelName: string; channelId: string; channelValid: boolean; channelCreateTime: number; channelExpireTime: number; creator: string; members: string; rtcTokenTtl: number; rtcToken: string; rtcJoinRoomResponse: string; ext: string; callStatus: number; } export declare function formatCreateResponse(response: CreateResponseData): V2NIMSignallingChannelInfo; export declare function formatJoinResponse(response: JoinResponseData): V2NIMSignallingJoinResult; export declare function formatGetInfoResponse(response: GetRoomInfoResponseData): V2NIMSignallingRoomInfo; export declare function formatDelayResponse(response: DelayResponseData): V2NIMSignallingRoomInfo; export declare function formatCallResponse(response: CallResponseData): V2NIMSignallingCallResult; export declare function formatCallSetupResponse(response: JoinAndAcceptResponseData): V2NIMSignallingCallSetupResult; 